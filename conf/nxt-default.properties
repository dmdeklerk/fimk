# Do not modify this file. Instead, create a nxt.properties file with only the properties
# you need to change, and set them there. The values in nxt.properties override those in
# nxt-default.properties.



#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
nxt.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
nxt.peerServerPort=7884

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
nxt.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from nxt.peerServerPort (useful if you do port forwarding behind a router).
nxt.myAddress=

# My platform, to be announced to peers.
nxt.myPlatform=PC

# My hallmark, if available.
nxt.myHallmark=

# Default initial peers. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom peers to nxt.wellKnownPeers instead.
nxt.defaultPeers=194.135.95.148; 85.214.222.82; 173.224.126.254; 194.135.95.149; 185.69.54.117; 185.69.54.118; 185.69.54.119; \
  37.139.5.199; 104.193.41.253; 81.64.77.101; 46.223.83.66; base.hashcow.net; 195.154.127.172; 194.135.95.150; 194.135.95.151; \
  46.173.9.98; 194.135.95.153; 195.154.123.155; 194.135.95.154; raspnxt.hopto.org; 185.69.54.110; 185.69.54.111; 54.214.250.209; \
  23.88.59.40; 185.69.54.112; 185.69.54.113; 185.69.54.125; 185.69.54.126; timekoin1.funkymonkey.org; 144.76.3.50; 185.69.54.127; \
  185.69.54.128; 87.121.52.246; lan.wow64.net; 188.226.179.119; nxtx.ru; 82.221.101.23; 85.25.198.120; nxt.hofhom.nl; nxt01.now.im; \
  89.72.57.246; 185.69.54.120; 185.69.54.121; 185.69.54.124; 167.114.113.250; 217.23.6.2; 174.140.167.239; dilnu.szn.dk; \
  167.114.113.249; 167.114.113.246; jnxt.org; dtodorov.asuscomm.com; 108.61.57.76; 185.69.54.103; 108.170.40.2; 185.69.54.104; \
  185.69.54.105; 80.153.101.190; 108.170.40.4; 108.170.40.5; 108.170.40.6; 185.69.54.109; 202.96.138.246; nxt.sx; vh44.ddns.net; \
  85.84.67.68; 91.202.253.240; 80.150.243.10; 178.162.39.12; 80.150.243.11; 185.69.54.101; 185.69.54.102; 167.114.96.222; \
  62.75.143.120; 5.9.105.170; home.kaerner.net; 95.215.44.229; 83.212.118.77; 174.140.166.124; nxt.ydns.eu; 104.236.217.110; \
  serras.homenet.org; 87.138.143.21; 185.69.54.60; nxtnode.linuxd.org; 87.139.122.48; 5.9.8.9; 113.106.85.172; 87.139.122.157; \
  130.255.185.116:20705; 23.95.37.134; ct.flipflop.mooo.com; 5.196.17.157; nxt.alkeron.com; nxt.grewals.co; 95.85.31.45; \
  91.235.72.49; 54.187.11.72; 91.239.69.78; 162.243.145.83; 95.143.216.60; 167.114.113.201; 77.88.208.12; cryptkeeper.vps.nxtcrypto.org; \
  nxt.noip.me; sluni.szn.dk; 89.250.240.60; 5.249.139.71; 66.30.204.105; megaman.thican.net; 81.169.150.141; 91.214.169.126; \
  54.213.222.141; zdani.szn.dk; 217.26.24.27; 52.0.72.67; 107.170.164.129; 188.166.0.145; 104.130.7.74; 198.50.146.93; 167.114.113.197; \
  89.133.34.109; 167.114.113.194; 92.222.22.16; nxt.cryonet.de; 23.88.59.163; 37.59.115.207; 192.121.166.240; 195.154.111.47; \
  217.23.3.203; 213.46.57.77; 37.59.115.204; 54.245.255.250; 89.212.19.49; 178.62.185.131; 89.250.243.200; 46.28.206.40; 5.135.191.89; \
  5.196.26.85; 82.0.149.148; gunka.szn.dk; 162.243.242.8; 37.120.168.131; 99.227.137.145; 162.220.240.171; 84.242.91.139; \
  69.163.40.132; 52.11.226.61; 192.151.156.250; 178.62.175.175; 149.172.165.6; 104.219.53.3; txn14.cloudapp.net; enricoip.no-ip.biz:65074; \
  node4.woll-e.net; nxt.cybermailing.com; node2.krusherpt.com; 212.227.135.232; 46.28.111.249; 80.150.243.95; 80.150.243.96; \
  80.150.243.97; enricoip.no-ip.biz; pakisnxt.no-ip.org; finnikola.ddns.net; node0.forgenxt.com; 46.108.156.144; 185.69.54.151; \
  188.134.68.50; 5.196.227.91; silvanoip.dhcp.biz; 178.15.99.67; 192.99.151.160; 162.243.122.251; 198.211.127.34; 5.9.155.145; \
  banli.szn.dk; 185.61.148.216; nxtpi.zapto.org; 188.226.155.38; 178.21.114.156; 103.22.181.239; 191.238.101.73; node.krusherpt.com; \
  miasik.no-ip.org; 94.23.215.222; 185.69.54.136; 185.69.54.137; 185.69.54.138; 185.69.54.139; 198.105.122.160; 84.253.125.186; \
  185.69.55.177; 167.114.113.25; 167.114.113.27; 92.222.72.98; 94.102.50.68; 151.236.29.228; 24.23.120.252; 178.20.9.9; 185.69.54.135; \
  bug.airdns.org; 178.33.203.157; 190.10.9.166; 178.18.83.36; 23.102.0.45; 132.230.76.160; 88.163.78.131; 185.61.148.119; \
  humanoide.thican.net; 167.114.71.191; 37.59.14.7; 185.69.54.140; 192.99.68.108; 185.69.54.141; 185.69.54.142; 185.69.54.143; \
  86.8.44.180; scripterron.dyndns.biz;

# A list of well known peer addresses / host names, separated by '; '.
nxt.wellKnownPeers=

# Known bad peers to be blacklisted
nxt.knownBlacklistedPeers=

# Known peers to be whitelisted
nxt.knownWhitelistedPeers=

# Default initial peers used for testnet only. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom testnet peers to nxt.testnetPeers instead.
nxt.defaultTestnetPeers=
# Peers used for testnet only.
nxt.testnetPeers=

# Maintain active connections with at least that many peers.
nxt.maxNumberOfConnectedPublicPeers=20

# Stop adding new peers when number of known peers exceeds that many.
nxt.maxNumberOfKnownPeers=2000

# Stop removing old peers when number of known peers drops below that many.
nxt.minNumberOfKnownPeers=1000

# Peer networking connect timeout for outgoing connections.
nxt.connectTimeout=10000

# Peer networking read timeout for outgoing connections.
nxt.readTimeout=20000

# Peer networking server idle timeout, milliseconds.
nxt.peerServerIdleTimeout=30000

# Use the peer hallmark to only connect with peers above the defined push/pull hallmark thresholds.
# Disabling hallmark protection also disables weighting of peers by hallmark weight, so connecting
# to any of your peers becomes equally likely.
nxt.enableHallmarkProtection=true

# Hallmark threshold to use when sending data to peers.
nxt.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
nxt.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
nxt.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
nxt.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
nxt.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
nxt.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6884 (peer networking), 6885 (UI) and 6886 (API) will be used.
nxt.isTestnet=false

# Save known peers in the database
nxt.savePeers=true

# Set to false to disable use of the peers database and the default initial peers.
# This will not delete saved peers.
nxt.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or wellKnownPeers.
nxt.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting nxt.shareMyAddress=false, nxt.wellKnownPeers=,
# nxt.testnetPeers= and nxt.usePeersDb=false, and if set to true overrides those properties.
nxt.isOffline=false

# Enable re-broadcasting of new transactions until they are received back from at least one
# peer, or found in the blockchain. This feature can optionally be disabled, to avoid the
# risk of revealing that this node is the submitter of such re-broadcasted new transactions.
nxt.enableTransactionRebroadcasting=true

# Verify batches of blocks downloaded from a single peer with that many other peers.
nxt.numberOfForkConfirmations=2
nxt.testnetNumberOfForkConfirmations=0

# Ignore peer announced addresses. Do not change unless you understand what it does.
nxt.ignorePeerAnnouncedAddress=false

# Only allow peer addresses starting with "fc". This is for users of cjdns only, do not set
# if you don't know what that is.
nxt.cjdnsOnly=false
#### API SERVER ####

# Accept http/json API requests.
nxt.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled. Set to * to allow all.
# Can also specify networks in CIDR notation, e.g. 192.168.1.0/24.
#nxt.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];
nxt.allowedBotHosts=*

# Port for http/json API requests.
nxt.apiServerPort=7886

# Port for https/json API request. If same as nxt.apiServerPort, the nxt.apiSSL setting
# determines whether SSL is used or not.
nxt.apiServerSSLPort=7876

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
nxt.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
nxt.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
nxt.apiResourceBase=html/fimk

# Default page for the API server.
nxt.apiWelcomeFile=index.html

# Java API documentation directory, optional.
nxt.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
nxt.apiServerCORS=false

# Enable SSL for the API server (also need to set nxt.keyStorePath and nxt.keyStorePassword).
# Non-SSL connections will be disabled if nxt.apiServerSSLPort is equal to nxt.apiServerPort.
# Otherwise, both SSL and non-SSL connections will be accepted.
nxt.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.apiServerEnforcePOST=true

# Compress Http responses for the API server.
nxt.enableAPIServerGZIPFilter=false

# Password that should be provided when executing protected (administrative) API requests.
# Please choose a decent password here. Preferably, use a password generator.
# Password protection is disabled and password is not needed when the API server only listens
# on the localhost interface, i.e. when nxt.apiServerHost=127.0.0.1.
nxt.adminPassword=

# Set to true to disable the password protection for admin API requests even when API server
# is publicly accessible. Not recommended.
nxt.disableAdminPassword=false

# The maximum number of records possible to retrieve with a single request. This restriction
# is not enforced if the admin password is provided, or is not needed (disabled or listening
# on localhost only).
nxt.maxAPIRecords=100

#### WEBSOCKET SERVER ####

# The WEBSOCKET server copies the config for the API server except for the few
# specific settings required.

# Accept websocket/json API requests.
nxt.enableWebsockets=true

# Port for websocket/json API requests.
nxt.websocketServerPort=7986

# Host interface on which to listen for websocket/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
nxt.websocketServerHost=0.0.0.0

#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
nxt.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled. Set to * to allow all.
nxt.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
nxt.uiServerPort=7885

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
nxt.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
nxt.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
nxt.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
nxt.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nxt.log=fim.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nxt.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
nxt.enableLogTraceback=false

# Enable logging of exception stack traces.
nxt.enableStackTraces=true

# Enable logging of Jetty messages.
#nxt.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
# 1=exceptions, 2=non 200 response, 4=200 response
nxt.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging purposes.
nxt.debugTraceAccounts=

# File name for logging tracked account balances.
nxt.debugTraceLog=fim-trace.csv

# Separator character for trace log.
nxt.debugTraceSeparator=\t

# Quote character for trace log.
nxt.debugTraceQuote="

# Log changes to unconfirmed balances.
nxt.debugLogUnconfirmed=false



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be created if missing.
nxt.dbUrl=jdbc:h2:fim_db/fim;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE

# Database connection JDBC url to use with the test network, if isTestnet=true
nxt.testDbUrl=jdbc:h2:fim_test_db/fim;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE

# Database connection timeout in seconds.
nxt.dbLoginTimeout=70

# Database default lock timeout in seconds.
nxt.dbDefaultLockTimeout=60

# Maximum simultaneous database connections.
nxt.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB or less,
# to a maximum of 256MB for heap sizes 640MB or higher.
nxt.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly worsen performance.
nxt.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow rollback of at least
# that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for the previously
# trimmed records to be re-created and preserved.
nxt.maxRollback=800

# When trimming is enabled, it is run every nxt.trimFrequency blocks.
nxt.trimFrequency=1000


#### VOTING SYSTEM ####
# If disabled, polls are not processed at finish height and results are not stored in the database.
# When requested, poll results will be calculated on-the-fly, if the votes are still available.
nxt.processPolls=true


#### MINT ####

# Address of the FIMK server to which the mint worker submits its transactions (default: localhost).
nxt.mint.serverAddress=

# Use Https when connecting to the server. Note that mint worker accepts any SSL certificate as
# valid, without checking hostname or certificate authority, therefore this will not protect
# you against a man-in-the-middle attack when submitting mint transactions.
nxt.mint.useHttps=false

# Specify a mintable currency code.
nxt.mint.currencyCode=

# Secret phrase for the minting account, this secret phrase is sent to the host specified by
# nxt.mint.serverAddress therefore do not specify secret phrase of an account with lots of funds.
nxt.mint.secretPhrase=

# Number of units to mint per transaction
# The minting difficulty grows linearly with the number of units per mint.
nxt.mint.unitsPerMint=1

# The initial nonce used for minting
# Set to 0 to start with a random nonce.
nxt.mint.initialNonce=0

# Number of concurrency threads used for minting
# Set to 0 allocate one thread per processor core.
nxt.mint.threadPoolSize=0

# When set to false mint transactions are not submitted when a hash is solved.
# Set this value to true to perform actual minting.
nxt.mint.isSubmitted=false

# When set to false the mint worker will resume operation even in case a mint transaction 
# has returned an error response
nxt.mint.stopOnError=false

#### FIM Specific ####

# For public nodes, only allow these accounts to forge
# Values can be a ; delimited list of accounts, an empty value (for no forging
# allowed) or a * to allow all accounts to forge. 
nxt.allowedToForge=*

# Enable the gossip protocol
nxt.gossipEnabled=true

#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking server only.
nxt.peerServerDoSFilter.maxRequestsPerSec=30
nxt.peerServerDoSFilter.delayMs=1000
nxt.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
nxt.keyStorePath=keystore
nxt.keyStorePassword=password

#### Developers only ####

# Force re-validation of blocks and transaction at start.
nxt.forceValidate=false

# Force re-build of derived objects tables at start.
nxt.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# nxt.timeMultiplier=1

# Delay generation of next block in order to accumulate more transactions in it.
# Waiting for much more than 15 s is not useful as transactions are allowed at most
# 15 s timestamp difference from the block they can be included in.
nxt.forgingDelay=20

# Generate and submit the next block before its hit time in response to receiving
# a lower difficulty block. Submitting the block more than 15 s before its time
# however will lead to its rejection.
nxt.forgingSpeedup=3

# FIMK version
nxt.version=0.5.1

